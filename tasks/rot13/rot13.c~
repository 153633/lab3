/*
 * rot13.c: ROT13 cipher test application
 *
 * Authors: Tianyi Huang <tianyih@andrew.cmu.edu>
 *          Zixuan Liu <zixuanl@andrew.cmu.edu>
 *  	    Jianan Lu <jiananl@andrew.cmu.edu>
 * Date:    10/13/2013
 */

#include <bits/fileno.h>
#include <unistd.h>                       
#include <stdlib.h>                       
#include <errno.h>                        
                                          
#define N 10                              
                                   
int main(int argc, char *argv[]) {        

        int readResult;			// readResult stores the return value of read
	int writeResult;		// writeResult stores the return value of write
	int writeloc;          		// writeloc stores the index of the last character we write
        char inBuffer[N];		// inBuffer is the buffer storing input
	char outBuffer[N]; 		// outBuffer stores the output values

	write(1,(char *)argv[0],2);

        while ((readResult = read(STDIN_FILENO, inBuffer, N)) > 0) {	// check if more than 0 bytes are read and no error

                int cnt;		// index of characters
        
		for (cnt = 0; cnt < readResult; cnt++) {
			if ((inBuffer[cnt] >= 65 && inBuffer[cnt] <= 77) || (inBuffer[cnt] >= 97 && inBuffer[cnt] <= 109)) {
				outBuffer[cnt] = inBuffer[cnt] + 13;	// A - M or a - m
			}
			else if ((inBuffer[cnt] >= 78 && inBuffer[cnt] <= 90) || (inBuffer[cnt] >= 110 && inBuffer[cnt] <= 122)) {
				outBuffer[cnt] = inBuffer[cnt] - 13;	// N - Z or n - z
			}
			else {	
				outBuffer[cnt] = inBuffer[cnt];		// others unchanged
			}
		}
		
		writeloc = 0;
		do {
			writeResult = write(STDOUT_FILENO, outBuffer + writeloc, readResult);
			if (writeResult > 0) writeloc += writeResult;	// in case write returns short count, use 'writeloc' to locate the last character we write
		} while (writeResult > 0 && writeloc != readResult);	// if it has not yet ouput all the characters that we read (write returns short count), 
									// then continue writing

		if (writeResult < 0) {					// as long as error occurs in write, it terminates with status 1
			write(1, "write error in rot13\n",7);
			exit(1);
		}

        }       
                                  
        if (readResult == 0) {    	// if zero byte is read, exit with status 0                                                   
			    exit(10);                          
        }                                         
        else if (readResult < 0) {      // terminate with status 1
            write(1,"read error in rot13\n",7);  
				exit(1);                                               
        }  
                  
        return 1;
}



